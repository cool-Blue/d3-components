41f89fa9b807699f7d0eeeb7a47fec1c60a55b80
orientdb.js
getFamilytreeSingle
- This queries the db for the selected net and returns it: works fine
- Then the sub-net is returned to familytree-d3.js
 - findDuplicatesAndSetEmpty checks if the subnet nodes are already in the main net and, if they are, deletes them from the sub-net
 - then the remaining nodes on the sub-net are concatinated onto the main net.
 - if the main net already contains the selected net the end result is nothing

getFamilytreeAll2
- added this version with the call-back specified by the caller: #seperation of concerns principle

- issues:
 - this module should not make the decision about familytree.getAlreadyThere(): violates Shy principle


familytree-d3.js
- updateGraphByRemoveElement
 - json4Splicing does not do anything, just use currentJason

- initializeGraph
 - moved .attr("xlink:href",  and .on("error", from node to newNode
 - add indexing function to ensure nodes have the same href
  - add imgHref as a seperate function so can use it as index as well as for making the node href

- showAll
 - use getFamilytreeAll2 with callback
 - can eliminate the decision in familytree.js and there, just call familytree.createGraph

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
86543cc

#orientdb.js
-add getFamilytreeAll2
 getFamilytreeAll2
 - this object makes no decision about which familytree method to use
 - add allJSON static, private member to cache the results
 - add function to to return a cloned version of results
   - this means that objects added by force.start are not added to allJSON
-add getFamilytreeSingle2
 getFamilytreeSingle2
 - add argument for success calback
- added loadedSingles d3.map object to cache and re-cycle results from getFamilytreeSingle2
-subscribe to familytree node delete events and stash the relations record

#familytree.js
- modified the click on li for search suggestions
  - use getFamilytreeSingle2 and specify the correct call-back
  - hard reset the graph if showAll flag was set and clear showAll flag to enter relationship mode
- add showAll flag
  - this module is the controler so should be responsible for show all vs show relationships mode
- set showAll flag on showAll button click
- take over responsibility for click and doubleclick events in the graph
  add listeners to the familytree.events object

#familytree-d3.js
 findDuplicatesAndSetEmpty
 - allow for currentJSON not yet initialised
 updateGraph
 - allow for currentJSON not yet initialised, add a ternary statement
 cleanPresentation
 - added hard argument to force clear nodeCircles
 add events property
 - this is a d3.dispatch object for custom events management
 - instead of comunicating with orientdb, just issue events without caring what to do about them
   let the controller (familytree.js) manage what to do
 initializeGraph
 - make links and nodes an argument of the returned function
 - intergrate updateForce and updateData into here
 add nodes to filter circles by link count

#index
- load familytree-d3.js before familytree.js
- load familytree-d3.js before orientdb.js
 - load the service before the controller
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ISSUE: sometimes linkCount is wrong resulting in nodes not being deleted when they should
#orientdb.js
 stageFamilytreeSingle
 - add this to allow queery of single tree without commiting to currentJSON
 showInfo4Creature
 - added relationships query and display
 - fixed bug in locations list

#familytree.js
- modified the click on li for search suggestions
  - use stageFamilytreeSingle and bring the control decisions back into here

#info.css
- added list format for relations